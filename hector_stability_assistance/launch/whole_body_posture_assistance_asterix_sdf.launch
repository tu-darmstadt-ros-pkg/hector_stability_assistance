<?xml version="1.0"?>

<launch>
  <arg name="use_stability_assistance" default="$(optenv HECTOR_USE_STABILITY_ASSISTANCE false)"/>
  <arg name="cmd_vel_raw_topic" unless="$(arg use_stability_assistance)"  value="/cmd_vel_raw"/>
  <arg name="cmd_vel_raw_topic" if="$(arg use_stability_assistance)"      value="/cmd_vel_posture_limited"/>

  <arg name="node_name" value="whole_body_posture_assistance"/>
  <node pkg="hector_stability_assistance" type="whole_body_posture_assistance_node" name="$(arg node_name)" output="screen" respawn="true">
    <param name="enabled" value="false"/>
    <param name="control_rate" value="10"/>
    <param name="prediction_distance" value="0.15"/>
    <param name="prediction_angle" value="0.3"/>
    <param name="move_group" value="flipper_group"/>
    <param name="stagnation_mean_window_size" value="12"/> <!-- 2s @ 50Hz-->

    <!-- sdf contact estimation lib parameters -->
    <param name="pose_predictor" value="sdf_contact_estimation::SDFContactEstimation"/>
    <rosparam file="$(find sdf_contact_estimation)/config/optimization.yaml" command="load" ns="sdf_pose_predictor"/>
    <rosparam file="$(find sdf_contact_estimation)/config/asterix_shape_config.yaml" command="load" ns="sdf_pose_predictor/shape_model" />
    <param name="sdf_pose_predictor/debug" value="false"/>

    <!-- esdf server parameters -->
    <rosparam file="$(find hector_sensor_proc_launch)/config/voxblox_common_config.yaml" command="load" ns="esdf_server"/>
    <param name="esdf_server/update_mesh_every_n_sec" value="0.0"/>
    <remap from="~/esdf_server/esdf_map_in" to="/esdf_server/esdf_map_out" />

    <!-- posture optimization lib parameters -->
    <rosparam file="$(find hector_stability_assistance)/config/opt_asterix.yaml" command="load" />

    <remap from="/cmd_vel" to="/cmd_vel_unlimited"/>
    <remap from="~cmd_vel_out" to="$(arg cmd_vel_raw_topic)"/>
  </node>

   <!-- moveit_cpp parameters -->
  <rosparam ns="$(arg node_name)" file="$(find whole_body_planning_server)/config/moveit_cpp.yaml" command="load"/>

  <!-- moveit parameters -->
  <group ns="robot_description_planning">
    <rosparam command="load" file="$(find asterix_moveit_config)/config/joint_limits.yaml"/>
<!--     <rosparam command="load" file="$(find asterix_moveit_config)/config/joint_limits_world.yaml"/> -->
  </group>

  <!-- Planning Pipeline -->
  <include ns="$(arg node_name)/ompl" file="$(find asterix_moveit_config)/launch/ompl_planning_pipeline.launch.xml"/>

  <!-- Trajectory execution  -->
  <include ns="$(arg node_name)" file="$(find asterix_moveit_config)/launch/trajectory_execution.launch.xml"/>
</launch>
